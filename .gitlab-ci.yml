include: 'https://gitlab.com/gitlab-cd/ssh-template/raw/master/ssh.yml'

stages:
  - build
  - deploy

# build develop:
#   image: node:10.15.0-stretch
#   stage: build
#   only:
#     - develop
#   script:
#     - npm ci
#     - cp .env.example.js .env.js
#     - npm run build

build develop:
  image: docker:19.03.1
  stage: build
  only:
    - develop
  services:
    - docker:19.03.1-dind
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    # - docker pull $CI_REGISTRY_IMAGE:latest
    - cp .env.example.js .env.js
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG

deploy develop:
  image: alpine:3.11
  stage: deploy
  only:
    - develop
  script:
    - apk update && apk add openssh
    - ssh_run "$REMOTE_USER" "$REMOTE_HOST" "$SSH_PRIVATE_KEY" "cd $REMOTE_DIR_DEVELOP && git fetch origin"
    - ssh_run "$REMOTE_USER" "$REMOTE_HOST" "$SSH_PRIVATE_KEY" "cd $REMOTE_DIR_MASTER && git reset --hard origin/$CI_COMMIT_BRANCH"
    - ssh_run "$REMOTE_USER" "$REMOTE_HOST" "$SSH_PRIVATE_KEY" "cd $REMOTE_DIR_MASTER && docker build . -t krym-vue/$CI_COMMIT_BRANCH:latest"
    - ssh_run "$REMOTE_USER" "$REMOTE_HOST" "$SSH_PRIVATE_KEY" "cd $REMOTE_DIR_MASTER && docker stop krym-$CI_COMMIT_BRANCH || true"    
    - ssh_run "$REMOTE_USER" "$REMOTE_HOST" "$SSH_PRIVATE_KEY" "cd $REMOTE_DIR_MASTER && docker rm krym-$CI_COMMIT_BRANCH || true"
    - ssh_run "$REMOTE_USER" "$REMOTE_HOST" "$SSH_PRIVATE_KEY" "cd $REMOTE_DIR_MASTER && docker run -d --name krym-$CI_COMMIT_BRANCH --restart=on-failure:10 -p 127.0.0.1:3000:3000 krym-vue/$CI_COMMIT_BRANCH:latest"       
    - ssh_run "$REMOTE_USER" "$REMOTE_HOST" "$SSH_PRIVATE_KEY" "cd $REMOTE_DIR_MASTER && docker images prune -f"       

build master:
  image: docker:19.03.1
  stage: build
  only:
    - master
  services:
    - docker:19.03.1-dind
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    # - docker pull $CI_REGISTRY_IMAGE:latest
    - cp .env.example.js .env.js
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG

deploy master:
  stage: deploy
  only:
    - master
  script:
    - ssh_run "$REMOTE_USER" "$REMOTE_HOST" "$SSH_PRIVATE_KEY" "cd $REMOTE_DIR_MASTER && git fetch origin"
    - ssh_run "$REMOTE_USER" "$REMOTE_HOST" "$SSH_PRIVATE_KEY" "cd $REMOTE_DIR_MASTER && git reset --hard origin/$CI_COMMIT_BRANCH"
    - ssh_run "$REMOTE_USER" "$REMOTE_HOST" "$SSH_PRIVATE_KEY" "cd $REMOTE_DIR_MASTER && docker build . -t krym-vue/$CI_COMMIT_BRANCH:latest"
    - ssh_run "$REMOTE_USER" "$REMOTE_HOST" "$SSH_PRIVATE_KEY" "cd $REMOTE_DIR_MASTER && docker stop krym-$CI_COMMIT_BRANCH || true"   
    - ssh_run "$REMOTE_USER" "$REMOTE_HOST" "$SSH_PRIVATE_KEY" "cd $REMOTE_DIR_MASTER && docker rm krym-$CI_COMMIT_BRANCH || true" 
    - ssh_run "$REMOTE_USER" "$REMOTE_HOST" "$SSH_PRIVATE_KEY" "cd $REMOTE_DIR_MASTER && docker run -d --name krym-$CI_COMMIT_BRANCH --restart=on-failure:10 -p 127.0.0.1:3001:3000 krym-vue/$CI_COMMIT_BRANCH:latest"       
    - ssh_run "$REMOTE_USER" "$REMOTE_HOST" "$SSH_PRIVATE_KEY" "cd $REMOTE_DIR_MASTER && docker images prune -f"       