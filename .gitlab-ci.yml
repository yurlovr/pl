include: 'https://gitlab.com/gitlab-cd/ssh-template/raw/master/ssh.yml'

stages:
  - build
  - deploy

.master_environment:
  environment:
    name: master
    url: https://master.krym-project.cloud
  
.develop_environment:
  environment:
    name: develop
    url: https://develop.krym-project.cloud

.build_template:
  image: docker:19.03.1
  stage: build
  services:
    - docker:19.03.1-dind
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - echo $IMAGE_TAG
    - docker pull $IMAGE_TAG || true
    - echo "build image for "
    - echo $URL_API
    - docker build -t $IMAGE_TAG . --build-arg URL_API=$URL_API --compress --cache-from $IMAGE_TAG
    - docker push $IMAGE_TAG 

.build_docker:
  image: docker:19.03.12
  stage: build
  variables:
    IMAGE_TAG: $CR_ID/front-$ENV:latest
  before_script:
    - echo $CR_KEY | docker login --username json_key --password-stdin cr.yandex
  script:
    - echo $IMAGE_TAG
    - docker pull $IMAGE_TAG || true
    - echo "build image for $URL_API"
    - docker build -t $IMAGE_TAG . --build-arg URL_API=$URL_API --compress --cache-from $IMAGE_TAG
    - docker push $IMAGE_TAG     
  tags:
    - preprod-docker    

.deploy_template:
  image: alpine:3.11
  stage: deploy
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
    SSH_PARAMS: $REMOTE_USER $REMOTE_HOST
  script:
    - apk update && apk add openssh
    - echo $SSH_PARAMS
    - ssh_run $SSH_PARAMS "$SSH_PRIVATE_KEY" "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
    - ssh_run $SSH_PARAMS "$SSH_PRIVATE_KEY" "docker pull $IMAGE_TAG"
    - ssh_run $SSH_PARAMS "$SSH_PRIVATE_KEY" "docker stop krym-$CI_COMMIT_BRANCH || true"    
    - ssh_run $SSH_PARAMS "$SSH_PRIVATE_KEY" "docker rm krym-$CI_COMMIT_BRANCH || true"
    - ssh_run $SSH_PARAMS "$SSH_PRIVATE_KEY" "docker run -d --name krym-$CI_COMMIT_BRANCH --restart=on-failure:10 -p 127.0.0.1:$PORT:3000 $IMAGE_TAG"       
    # - ssh_run $SSH_PARAMS "$SSH_PRIVATE_KEY" "docker image prune -f" || true   
        
build_develop:
  extends:
    - .build_docker
  only:
    - develop
  variables:    
    ENV: dev
    URL_API: https://backuat.plyazhi.ru/api/app/

deploy_develop:
  only:
    - develop
  stage: deploy
  environment:
    name: dev
    url: https://dev.plyazhi.ru/   
  tags:
    - preprod-docker
  script:
    - docker stack deploy --with-registry-auth -c /home/ubuntu/plyazhi/web.yml web
  variables:
    GIT_STRATEGY: none           

build_master:
  extends:
    - .build_template
    - .master_environment
  only:
    - master

deploy_master:
  extends: 
    - .deploy_template
    - .master_environment
  variables: 
    PORT: 3001
  only:
    - master
  needs: ["build_master"]